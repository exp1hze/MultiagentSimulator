###
# this is a comment line
###
# Note: this file cannot have blank lines at the end of the file.
# That will cause a run time error.
Rerun                   -1
Run_num_file            run.num
Output_path             Output
#
### Printing params
# output to screen
Print_params            1
### Printing status of run in each timestep
#   1 = print output each timestep, 0 = don't
Print_step              1
#
### Maximum number of time steps to run.
Max_steps		200
#
### size of population of agents
Pop_size                100
#
### How to initialize the thresholds of the agents in the population:
#   <=1.0 = constant
#   2.0 = uniform random
#   3.0 = gaussian, standard normal distribution
#   4.0 = poisson
#   5.0 = exponential
#   6.0 = logarithmic
Thresh_init 		2.0
#
###### individual Agent parameters
### 20.04.16.ASW  Thresh_dynamic parameter
### flag to turn on dynamic thresholds
#   0 = off
#   1 = on, max and min for each agent is [0.0,1.0]
#   2 = on, max and min for each agent generated using uniform distribution.
#       If randomly generated values result in min>max, exchange the two values.
Thresh_dynamic		0
### Thresh_decrease and Thresh_increase
#   These are absolute values, so they must be set with Range in mind.
#   Amount by which threshold decreases when agent acts on a task.
Thresh_decrease		0.033
#   Amount by which threshold increases when agent does not act on a task.
Thresh_increase		0.1
#
### Probability that agent will stop to reconsider what task to work on.
#   If the agent does not stop to reconsider, then continues with current
#   task.
#   This parameter determines how agents will be assigned their own
#   individual value of Agent[].prob_check.
#   Values assigned to agents will range from 0.0 to 1.0.
#   If Prob_check = 0.0, initialize each agent's prob_check field randomly
#   else initialize all agents' prob_check fields to Prob_check.
#   Once the agents have their own values for this parameter, it will
#   determine the probability of them stopping to check for new tasks.
#   For values of Agent[].prob_check lower than 0.1, the probability
#   with which the agent stops to check will vary randomly in each timestep.
Prob_check      1.0
### How agent selects task if more than one task stimulus falls under the
#   agent's corresponding threshold
#   random = select randomly
#   urgent = select the task that is most urgent
Task_selection		random
### Target parameter
### Target path specifies the path that the target will take
#   Choices include:
#      square
#      square10
#      circle
#      random
#      random_manhattan
#      sharp      		straight lines with random sharp turns
#      west			move west
#      northeast		move northeast
#      northeast_accel		move northeast and accelerate
Target_path		square
### Length of each step that target takes (type double).
Target_step_len		1
### Tracker parameter
### The radius indicates the distance to either side of the center of the
#   distribution that threshold values will run.  In other words, the range
#   of threshold for a task, e.g. push north, is 2 * Radius.  Opposite tasks,
#   e.g. pushing north and south will have adjacent ranges.
#   For example, if Radius = 10, then push north has a width of range 20
#   as does push south, and the two ranges are adjacent at zero.
#   As a result, all agents act if stimulus is > 2 * Radius.
Range			10
### Ratio of tracker-max-step-len/target-step-len
Step_ratio		1
###
### Path_amplitude and Path_period are stored in the amplitude and period
#   fields of the TARGET structure.  They are only used for the zigzag and sine
#   paths at this time.  191026AW.
Path_amplitude		20
Path_period		40
### HDM; 2019.09.12
### Intensity variation flag
### Indicates if intensity variation is being used
#   Values:
#       0 - intensity variation is off
#       1 - intensity variation is on; Homogeneous aging ranges
#       2 - intensity variation is on; Heterogeneous aging ranges
Intensity_variation     0
###  Intensity aging indicates if each agent's intensity changes over time
#   Values:
#       0 - intensity aging is off
#       1 - intensity aging is on
Intensity_aging         0
### Settings for intensity aging are real values
Intensity_aging_min     0.5
Intensity_aging_max     1.5
Intensity_aging_up      0.075
Intensity_aging_down    0.025
#   Values:
#       1 - Gaussian
#       2 - Uniform
Intensity_distribution  2
Hetero_center_distr      1
Hetero_radius_distr      1
### Setting for heterogeneous ranges
# range_max and range_min set the absolute bounds for agent's intensity range
Hetero_range_max    2.0
Hetero_range_min    0.0
# radius_max is used for uniform distributions
Hetero_radius_max   0.5
Hetero_radius_min   0.25
### Settings for Gaussian distributions
Hetero_center_mu    1.0
Hetero_center_std   0.15
Hetero_radius_mu    0.5
Hetero_radius_std   0.05
### HDM; 2019.10.24
### Response probability
#   Values:
#       < 1.0 - homogeneous, agent fails to act with probability 1 - p
#       1.0 - homogeneous, agent acts whenever threshold is met
#   These two values not yet implemented:
#       2.0 - heterogeneous, uniformly distributed in [0..1]
#       3.0 - heterogeneous, Gaussian
Response_prob   1.0
### Number of agents to kill
#   Values:
#       0 - killing of agents is disabled
#       > 0 - number of agents to kill
Kill_number     0
### Time step for first extinction
### Not used if Kill_number = 0
First_extinction    100
### Period for extinctions
#   Values:
#       0 - repeated extinctions disabled
#       > 0 - extinctions occur at increments of the specified value
Extinction_period   0
### Create the gnuplot plots for a given run, 1 = true, 0 = false
Gnuplot_plots		0
